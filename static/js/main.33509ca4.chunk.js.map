{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Sub","props","className","Ï†úÎ™©","ÎÑòÎ≤Ñ","ÎÇ†Ïßú","App","useState","Ï†úÎ™©Î≥ÄÍ≤Ω","Îî∞Î¥â","Îî∞Î¥âÎ≥ÄÍ≤Ω","ÏÑúÎ∏å","ÏÑúÎ∏åÎ≥ÄÍ≤Ω","ÌÅ¥Î¶≠ÎêúÍ±∞","ÌÅ¥Î¶≠ÎêúÍ±∞Î≥ÄÍ≤Ω","ÏûÖÎ†•Í∞í","ÏûÖÎ†•Í∞íÎ≥ÄÍ≤Ω","today","Date","year","getFullYear","month","getMonth","date","getDate","Navbar","collapseOnSelect","expand","bg","variant","Container","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","title","Item","Divider","eventKey","Jumbotron","style","color","Button","map","Í∏Ä","i","onClick","copy","onChange","e","target","value","unshift","newArray","Îî∞Î¥âÏ∂îÍ∞Ä","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAyGA,SAASA,EAAIC,GACX,OACE,sBAAKC,UAAY,QAAjB,UACE,6BAAMD,EAAME,aAAGF,EAAMG,gBACrB,8BAAIH,EAAMI,aAAGJ,EAAMG,aAAnB,YACA,gDAMSE,MA/Gf,WACE,MAAiBC,mBAAS,CAAC,kCAAS,kCAAS,oCAA7C,mBAAKJ,EAAL,KAASK,EAAT,KACA,EAAiBD,mBAAS,CAAC,EAAG,EAAG,IAAjC,mBAAKE,EAAL,KAASC,EAAT,KACA,EAAiBH,oBAAS,GAA1B,mBAAKI,EAAL,KAASC,EAAT,KACA,EAAqBL,mBAAS,GAA9B,mBAAKM,EAAL,KAAWC,EAAX,KACA,EAAmBP,mBAAS,IAA5B,mBAAKQ,EAAL,KAAUC,EAAV,KAEIC,EAAQ,IAAIC,KACZC,EAAOF,EAAMG,cACbC,EAAQJ,EAAMK,WAAW,EACzBC,EAAON,EAAMO,UAQjB,OACE,sBAAKtB,UAAU,MAAf,UACE,cAACuB,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,OAAOC,QAAQ,OAAvD,SACJ,eAACC,EAAA,EAAD,WACA,cAACL,EAAA,EAAOM,MAAR,CAAcC,KAAK,QAAnB,wBACA,cAACP,EAAA,EAAOQ,OAAR,CAAeC,gBAAc,0BAC7B,eAACT,EAAA,EAAOU,SAAR,CAAiBC,GAAG,wBAApB,UACE,eAACC,EAAA,EAAD,CAAKnC,UAAU,UAAf,UACE,cAACmC,EAAA,EAAIC,KAAL,CAAUN,KAAK,YAAf,sBACA,cAACK,EAAA,EAAIC,KAAL,CAAUN,KAAK,WAAf,qBACA,eAACO,EAAA,EAAD,CAAaC,MAAM,WAAWJ,GAAG,0BAAjC,UACE,cAACG,EAAA,EAAYE,KAAb,CAAkBT,KAAK,cAAvB,oBACA,cAACO,EAAA,EAAYE,KAAb,CAAkBT,KAAK,cAAvB,4BACA,cAACO,EAAA,EAAYE,KAAb,CAAkBT,KAAK,cAAvB,uBACA,cAACO,EAAA,EAAYG,QAAb,IACA,cAACH,EAAA,EAAYE,KAAb,CAAkBT,KAAK,cAAvB,kCAGJ,eAACK,EAAA,EAAD,WACE,cAACA,EAAA,EAAIC,KAAL,CAAUN,KAAK,SAAf,wBACA,cAACK,EAAA,EAAIC,KAAL,CAAUK,SAAU,EAAGX,KAAK,SAA5B,mCAQN,eAACY,EAAA,EAAD,CAAW1C,UAAY,aAAvB,UACE,wCACA,mGAMF,eAAC0C,EAAA,EAAD,CAAW1C,UAAY,YAAvB,UACE,+CACA,mBAAG2C,MAAS,CAACC,MAAQ,SAArB,8JAGA,4BACA,cAACC,EAAA,EAAD,CAAQlB,QAAQ,YAAhB,4BAMI,mDAEA,uBAEE1B,EAAG6C,KAAI,SAASC,EAAEC,GAChB,OAAO,sBAAKhD,UAAY,OAAjB,UACP,+BAAI,oBAAGiD,QAAS,WAAKrC,EAAOoC,GAAItC,GAAMD,IAAlC,cAA0CsC,KAAM,uBAAME,QAAU,WAAM,IAAIC,EAAI,YAAO3C,GAAK2C,EAAKF,KAAMxC,EAAK0C,IAA1D,0BAAuE3C,EAAGyC,SAC9H,8BAAI/B,EAAJ,UAAYE,EAAZ,SAAoBE,EAAK2B,EAAzB,aACA,wBAGQ,IAAPvC,EACE,cAACX,EAAD,CAAKG,eAAIA,EAAIE,eAAMkB,EAAMnB,eAAMS,IAC/B,OARmCqC,MAiB1C,sBAAKhD,UAAY,UAAjB,UACE,kDACA,uBAAOmD,SAAY,SAACC,GAAKtC,EAAMsC,EAAEC,OAAOC,UACxC,cAACT,EAAA,EAAD,CAAQlB,QAAQ,YAAYsB,QAAW,WAAK,IAAIC,EAAI,YAAOjD,GAAIiD,EAAKK,QAAQ1C,GAAKP,EAAK4C,GA9E5F,WACE,IAAIM,EAAQ,YAAOjD,GACnBiD,EAASD,QAAQ,GACjB/C,EAAMgD,GA2E2FC,IAA7F,iCCpFOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.33509ca4.chunk.js","sourcesContent":["/* eslint-disable */\nimport './App.css';\nimport {Navbar,Container,Nav,NavDropdown,Jumbotron,Button} from 'react-bootstrap';\nimport React, {useState} from 'react';\n\nfunction App() {\n  let [Ï†úÎ™©, Ï†úÎ™©Î≥ÄÍ≤Ω] = useState(['Ïò§ÎäòÏùò ÎÇ†Ïî®','ÎÇ¥ÏùºÏùò ÎÇ†Ïî®','Î™®Î†àÏùò ÎÇ†Ïî®']);\n  let [Îî∞Î¥â, Îî∞Î¥âÎ≥ÄÍ≤Ω] = useState([0, 0 ,0]);\n  let [ÏÑúÎ∏å, ÏÑúÎ∏åÎ≥ÄÍ≤Ω] = useState(false);\n  let [ÌÅ¥Î¶≠ÎêúÍ±∞, ÌÅ¥Î¶≠ÎêúÍ±∞Î≥ÄÍ≤Ω] = useState(0);\n  let [ÏûÖÎ†•Í∞í, ÏûÖÎ†•Í∞íÎ≥ÄÍ≤Ω] = useState('');\n\n  let today = new Date();\n  let year = today.getFullYear();\n  let month = today.getMonth()+1;\n  let date = today.getDate();\n\n\n  function Îî∞Î¥âÏ∂îÍ∞Ä(){\n    var newArray = [...Îî∞Î¥â];\n    newArray.unshift(0);\n    Îî∞Î¥âÎ≥ÄÍ≤Ω( newArray );\n  }\n  return (\n    <div className=\"App\">\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n  <Container>\n  <Navbar.Brand href=\"#home\">Write Free</Navbar.Brand>\n  <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n  <Navbar.Collapse id=\"responsive-navbar-nav\">\n    <Nav className=\"me-auto\">\n      <Nav.Link href=\"#features\">Features</Nav.Link>\n      <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\n      <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\n        <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n        <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n        <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n        <NavDropdown.Divider />\n        <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n      </NavDropdown>\n    </Nav>\n    <Nav>\n      <Nav.Link href=\"#deets\">More deets</Nav.Link>\n      <Nav.Link eventKey={2} href=\"#memes\">\n        Dank memes\n      </Nav.Link>\n    </Nav>\n  </Navbar.Collapse>\n  </Container>\n</Navbar>\n\n<Jumbotron className = \"background\">\n  <h1>WELCOM</h1>\n  <p>\n    ÏûêÏú†Î°≠Í≤å Ïù¥Ïö©Ìï¥ Î¥ÖÏãúÎã§.\n  </p>\n \n</Jumbotron>\n\n<Jumbotron className = \"interview\">\n  <h1>Shop & Review</h1>\n  <p style = {{color : \"black\"}}>\n    ÏïÑÎûòÏùò ÏÉÅÌíàÎì§ÏùÑ ÌôïÏù∏ÌïòÏÑ∏Ïöî. Í∑∏Î¶¨Í≥† Î¶¨Î∑∞ÎèÑ Ï†ÅÏñ¥Î≥¥ÏÑ∏Ïöî\n  </p>\n  <p>\n  <Button variant=\"secondary\">Secondary</Button>\n  </p>\n</Jumbotron>\n\n\n\n      <h3>TODAY IS GOOD DAY</h3>\n      {/* <button onClick = { Ï†úÎ™©Î∞îÍæ∏Í∏∞ }>Î≤ÑÌäº</button> */}\n      <hr/>\n      {\n        Ï†úÎ™©.map(function(Í∏Ä,i){\n          return <div className = \"list\" key = {i}>\n          <h3><a onClick={()=>{ÌÅ¥Î¶≠ÎêúÍ±∞Î≥ÄÍ≤Ω(i); ÏÑúÎ∏åÎ≥ÄÍ≤Ω(!ÏÑúÎ∏å)}}> {Í∏Ä}</a><span onClick={ ()=>{ let copy = [...Îî∞Î¥â]; copy[i]++; Îî∞Î¥âÎ≥ÄÍ≤Ω(copy)} }>üëç {Îî∞Î¥â[i]}</span></h3>\n          <p>{year}ÎÖÑ {month}Ïõî{date+i} Ïùº</p>\n          <hr/>\n\n          {\n           ÏÑúÎ∏å === true\n           ? <Sub Ï†úÎ™©={Ï†úÎ™©} ÎÇ†Ïßú = {date} ÎÑòÎ≤Ñ = {ÌÅ¥Î¶≠ÎêúÍ±∞} />\n           : null\n          }\n\n         </div>\n        })\n\n      }\n      \n\n      <div className = \"publish\">\n        <h3>WRITE YOUR THINK</h3>\n        <input onChange = {(e)=>{ÏûÖÎ†•Í∞íÎ≥ÄÍ≤Ω(e.target.value)}}/>\n        <Button variant=\"secondary\" onClick = {()=>{var copy = [...Ï†úÎ™©];copy.unshift(ÏûÖÎ†•Í∞í);Ï†úÎ™©Î≥ÄÍ≤Ω(copy); Îî∞Î¥âÏ∂îÍ∞Ä();}}>Ï†ÄÏû•</Button>\n\n        \n      </div>\n\n    </div>\n  );\n}\n\nfunction Sub(props){\n  return (\n    <div className = \"modal\">\n      <h2>{ props.Ï†úÎ™©[props.ÎÑòÎ≤Ñ]}</h2>\n      <p>{props.ÎÇ†Ïßú+props.ÎÑòÎ≤Ñ}Ïùº</p>\n      <p>ÎßëÏùå</p>\n    </div>\n  )\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}